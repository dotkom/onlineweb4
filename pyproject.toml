[tool.poetry]
name = "onlineweb4"
version = "1.0.0"
description = "Web pages for Online, Linjeforeningen for Informatikk at NTNU"
authors = ["dotkom <dotkom@online.ntnu.no>"]
license = "MIT"

[tool.poetry.dependencies]
python = "~3.11"
Django = "^3.2.24"
djangorestframework = "~3.14"
django-filter = "~23.5"
pillow = "~10.2"
stripe = "~3.5"
icalendar = "~5.0"
google-api-python-client = "~2.113"
django-chunks = { git = "https://github.com/dotkom/django-chunks.git", rev = "5c01b06f40122c05d2a806f9872b07215ffc33ac" }
django-crispy-forms = "~2.0"
crispy-bootstrap3 = "^2024.1"
django-dynamic-fixture = "~3.1"
django-recaptcha = "~3.0"           # Google ReCaptcha
django-watson = "~1.6.2"            # Indexed model search lib
django-reversion = "~5.0"           # Model version history with middleware hooks to all post_save signals
django-guardian = "~2.4"            # Per Object permissions framework
django-taggit = "~4.0"              # Generic multi-model tagging library
pdfdocument = "~4.0"
Unidecode = "~1.3"                  # Translates every unicode symbol to the closest ascii. online_mail_usernames
django-markdown-deux = "~1.0"
django-cors-headers = "~4.3"        # Enable CORS for Nibble
django-datetime-widget = { git = "https://github.com/oleast/django-datetime-widget.git", rev = "95a5ba4738853d1ed4081e1e33e1600cba984aad" }
django-webpack-loader = "~3.0"      # Integration with webpack
dj-database-url = "~2.1"            # Allows to configure databases using URLs
python-decouple = "~3.8"            # Configuration and settings management
docutils = "~0.20"                  # Allows django-admindocs to generate documentation
oic = "~1.6"			            # OpenID Connect Client
requests = { version = "~2.31", extras = [ "security" ] }
# Wiki
wiki = "^0.10.0"

django-js-reverse = "~0.10"
pyyaml = "^6.0"
pywebpush = "^1.11.0"

# Monitoring
sentry-sdk = { version = "~1.39", extras = [ "django" ] }

# AWS
boto3 =  { version = "~1.34", optional = true }
django-ses = { version = "~3.5", optional = true }
zappa = { version = "~0.58", optional = true }
django-storages = { version = "~1.14", extras = ["s3"], optional = true }
# psyco postgresql
psycopg2-binary = { version = "~2.9", optional = true }
mozilla-django-oidc = "^4.0.0"
auth0-python = "^4.7.0"


[tool.poetry.group.dev.dependencies]
# Testing
pytest = "~7.4"
pytest-cov = "~4.1"
pytest-django = "~4.7"
pytest-xdist = "~3.4"
freezegun = "~1.4"
coverage = { version = "~7.4", extras = [ "toml" ] }

# Linting
ruff = "~0.1"
isort = "~5.12"
pycodestyle = "~2.11"
black = "~23.12"
pre-commit = "~3.6"

[tool.poetry.extras]
# only required for running in production on AWS
prod = [
    "psycopg2-binary",
    "boto3",
    "django-ses",
    "zappa",
    "django-storages",
]
postgresql = ["psycopg2-binary"]
s3 = ["django-storages"]


[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = ["F403"]


[tool.isort]
profile = "black"
known_first_party = [ "apps", "utils", "onlineweb4" ]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "onlineweb4.settings"
norecursedirs = [ ".*",  "env*", "tmp*" ]
python_files = [ "tests.py", "*_tests.py" ]
addopts = "--nomigrations -n auto --dist loadscope"
filterwarnings = [
    # for future maintainers: these fields are documented here
    # https://docs.python.org/3/library/warnings.html#the-warnings-filter
    # All local ones are dealt with, this cannot be fixed by us
    "ignore:.*defines default_app_config.*:django.utils.deprecation.RemovedInDjango41Warning",
    "ignore:Use setlocale\\(\\), getencoding\\(\\) and getlocale\\(\\) instead:DeprecationWarning:.*django.*",
    "ignore:'cgi' is deprecated and slated for removal in Python 3.13:DeprecationWarning:.*django.*",
    "ignore:'etree' is deprecated. Use 'xml.etree.ElementTree' instead.:DeprecationWarning:.*wiki.*",
    # we should probably care about OpenAPI-warnings, but they are extremely noisy
    "ignore:Schema component \"Event\" has been overriden with a different value.:UserWarning:rest_framework.schemas.openapi",
    "ignore:You have a duplicated operationId in your OpenAPI schema:UserWarning",
    "ignore:<class '.*'> is not compatible with schema generation:UserWarning",
]

[tool.coverage.report]
omit = [
    "apps/**/migrations/*",
    "apps/**/tests/*",
    "apps/**/tests.py",
    "apps/**/test_*.py",
    "onlineweb4/settings/**",
]

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.masonry.api"

