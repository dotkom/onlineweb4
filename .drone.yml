kind: pipeline
type: docker
name: default

steps:
  - name: restore-cache
    image: plugins/s3-cache
    settings:
      pull: true
      root: 
        from_secret: s3_bucket_name
      access_key:
        from_secret: s3_access_key
      secret_key:
        from_secret: s3_secret_key
      restore: true

  - name: setup
    image: registry.online.ntnu.no/dotkom/onlineweb4-testbase:3.7
    environment:
      PIP_CACHE_DIR: ./.pip-cache
    pull: true
    volumes:
      - name: python-dependencies
        path: /usr/local/lib/python3.7/site-packages
      - name: binaries
        path: /usr/local/bin
    when:
      event:
        - push
    commands:
      - cp onlineweb4/settings/example-local.py onlineweb4/settings/local.py
      - yarn install --pure-lockfile
      - poetry export -f requirements.txt > requirements.txt --dev -E prod --without-hashes
      - poetry install --no-interaction --no-ansi
    depends_on:
      - restore-cache

  - name: npm-build
    image: registry.online.ntnu.no/dotkom/onlineweb4-testbase:3.7
    when:
      event:
        - push
    commands:
      - npm run build:prod
    depends_on:
     - setup

  - name: js-lint
    image: registry.online.ntnu.no/dotkom/onlineweb4-testbase:3.7
    when:
      event:
        - push
    commands:
      - npm run lint-js
    depends_on:
      - setup

  - name: less-lint
    image: registry.online.ntnu.no/dotkom/onlineweb4-testbase:3.7
    when:
      event:
        - push
    commands:
      - npm run lint-less
    depends_on:
     - setup

  - name: python-lint
    image: registry.online.ntnu.no/dotkom/onlineweb4-testbase:3.7
    volumes:
      - name: python-dependencies
        path: /usr/local/lib/python3.7/site-packages
      - name: binaries
        path: /usr/local/bin
    when:
      event:
        - push
    commands:
      - tox -e flake8 -e isort -e black --recreate
    depends_on:
      - setup

  - name: check-migrations
    image: registry.online.ntnu.no/dotkom/onlineweb4-testbase:3.7
    when:
      event:
        - push
    volumes:
      - name: python-dependencies
        path: /usr/local/lib/python3.7/site-packages
    commands:
      - python manage.py makemigrations --check
    depends_on:
      - setup

  - name: python-tests
    image: registry.online.ntnu.no/dotkom/onlineweb4-testbase:3.7
    secrets:
      - codecov_token
    volumes:
      - name: python-dependencies
        path: /usr/local/lib/python3.7/site-packages
      - name: binaries
        path: /usr/local/bin
    environment:
      PIP_CACHE_DIR: ./.pip-cache
      CODECOV_TOKEN:
        from_secret: codecov_token
      OW4_DJANGO_STRIPE_PUBLIC_KEY_ARRKOM:
        from_secret: OW4_DJANGO_STRIPE_PUBLIC_KEY_ARRKOM
      OW4_DJANGO_STRIPE_PUBLIC_KEY_PROKOM:
        from_secret: OW4_DJANGO_STRIPE_PUBLIC_KEY_PROKOM
      OW4_DJANGO_STRIPE_PUBLIC_KEY_TRIKOM:
        from_secret: OW4_DJANGO_STRIPE_PUBLIC_KEY_TRIKOM
      OW4_DJANGO_STRIPE_PRIVATE_KEY_ARRKOM:
        from_secret: OW4_DJANGO_STRIPE_PRIVATE_KEY_ARRKOM
      OW4_DJANGO_STRIPE_PRIVATE_KEY_PROKOM:
        from_secret: OW4_DJANGO_STRIPE_PRIVATE_KEY_PROKOM
      OW4_DJANGO_STRIPE_PRIVATE_KEY_TRIKOM:
        from_secret: OW4_DJANGO_STRIPE_PRIVATE_KEY_TRIKOM
    when:
      event:
        - push
    commands:
      - pip install codecov
      - tox -e tests --recreate
      - codecov
    depends_on:
      - setup

  - name: update-requires.io
    image: registry.online.ntnu.no/dotkom/onlineweb4-testbase:3.7
    environment:
      PIP_CACHE_DIR: ./.pip-cache
      REQUIRES_IO_API_KEY:
        from_secret: REQUIRES_IO_API_KEY
    when:
      event:
        - push
    script:
      - pip install requires.io
      - poetry export -f requirements.txt > requirements.txt --dev -E prod -E docs --without-hashes
      - requires.io update-branch -t $REQUIRES_IO_API_KEY -r onlineweb4 -n ${DRONE_BRANCH} ./
    depends_on:
      - setup


  - name: rebuild-cache
    image: plugins/s3-cache
    settings:
      pull: true
      root: 
        from_secret: s3_bucket_name
      access_key:
        from_secret: s3_access_key
      secret_key:
        from_secret: s3_secret_key
      rebuild: true
      mount:
        - .tox
        - node_modules
        - .pip-cache

    when:
      event: push
    depends_on:
      - python-lint
      - python-tests

  - name: flush-cache
    image: plugins/s3-cache:1
    settings:
      pull: true
      root: 
        from_secret: s3_bucket_name
      access_key:
        from_secret: s3_access_key
      secret_key:
        from_secret: s3_secret_key
      flush: true
      flush_age: 14
    depends_on:
      - rebuild-cache

  - name: deploy
    image: appleboy/drone-ssh
    pull: true
    secrets:
      - ssh_key
    when:
      event:
        - push
      branch: main
    settings:
      host: nansen.online.ntnu.no
      port: 22
      username: root
      key:
        from_secret: ssh_key
      command_timeout: 600s
      script:
        - /srv/www/ow4dev/deploy.sh
    depends_on:
      - npm-build
      - js-lint
      - less-lint
      - python-lint
      - python-tests
      - check-migrations

volumes:
  - name: python-dependencies
    temp: {}
  - name: binaries
    temp: {}
image_pull_secrets:
  - dockerconfigjson
