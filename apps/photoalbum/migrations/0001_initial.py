# Generated by Django 2.1.11 on 2019-09-30 14:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Tittel')),
                ('description', models.TextField(blank=True, default='', max_length=2048, verbose_name='Beskrivelse')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_albums', to=settings.AUTH_USER_MODEL, verbose_name='Opprettede Albumer')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_original', models.ImageField(upload_to='images/responsive', verbose_name='Originalbilde')),
                ('image_wide', models.ImageField(upload_to='images/responsive/wide', verbose_name='Bredformat')),
                ('image_lg', models.ImageField(upload_to='images/responsive', verbose_name='LG Bilde')),
                ('image_md', models.ImageField(upload_to='images/responsive', verbose_name='MD Bilde')),
                ('image_sm', models.ImageField(upload_to='images/responsive', verbose_name='SM Bilde')),
                ('image_xs', models.ImageField(upload_to='images/responsive', verbose_name='XS Bilde')),
                ('thumbnail', models.ImageField(upload_to='images/responsive/thumbnails', verbose_name='Thumbnail')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Tittel')),
                ('description', models.TextField(blank=True, default='', max_length=2048, verbose_name='Beskrivelse')),
                ('photographer_name', models.CharField(blank=True, max_length=100, verbose_name='Fotografnavn')),
                ('album', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='photos', to='photoalbum.Album')),
                ('photographer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='uploaded_photos', to=settings.AUTH_USER_MODEL, verbose_name='Fotograf')),
                ('tags', taggit.managers.TaggableManager(help_text='En komma eller mellomrom-separert liste med tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Responsivt Bilde',
                'verbose_name_plural': 'Responsive Bilder',
                'ordering': ('album', 'timestamp'),
                'permissions': (('view_responsiveimage', 'View ResponsiveImage'),),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete'),
            },
        ),
        migrations.CreateModel(
            name='UserTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_tags', to='photoalbum.Photo')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_tags', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('photo', 'created_date', 'user'),
            },
        ),
    ]
