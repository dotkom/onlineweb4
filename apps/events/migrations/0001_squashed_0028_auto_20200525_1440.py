# Generated by Django 3.2.12 on 2022-04-03 18:39

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [
        ("events", "0001_initial"),
        ("events", "0002_auto_20150923_1929"),
        ("events", "0003_auto_20150923_2322"),
        ("events", "0004_auto_20150923_2322"),
        ("events", "0002_grouprestriction"),
        ("events", "0005_merge"),
        ("events", "0003_auto_20151015_0016"),
        ("events", "0006_merge"),
        ("events", "0002_auto_20150926_2339"),
        ("events", "0007_merge"),
        ("events", "0008_auto_20151029_1558"),
        ("events", "0009_auto_20160309_2133"),
        ("events", "0010_auto_20160906_1703"),
        ("events", "0011_auto_20161006_2151"),
        ("events", "0012_event_image"),
        ("events", "0013_auto_20161006_2212"),
        ("events", "0014_auto_20161007_1846"),
        ("events", "0015_remove_event_old_image"),
        ("events", "0016_event_organizer"),
        ("events", "0017_auto_20180221_2200"),
        ("events", "0018_auto_20190220_2205"),
        ("events", "0019_event_visible"),
        ("events", "0018_auto_20190506_1719"),
        ("events", "0020_merge_20190506_2241"),
        ("events", "0021_auto_20190506_2241"),
        ("events", "0022_auto_20190903_1410"),
        ("events", "0023_auto_20190903_1411"),
        ("events", "0024_auto_20191010_2259"),
        ("events", "0024_attendee_allow_pictures"),
        ("events", "0025_merge_20200301_1555"),
        ("events", "0025_auto_20200229_1046"),
        ("events", "0026_merge_20200316_1149"),
        ("events", "0027_auto_20200420_1143"),
        ("events", "0028_auto_20200525_1440"),
    ]

    initial = True

    dependencies = [
        ("gallery", "0012_auto_20160309_2133"),
        ("companyprofile", "0001_initial"),
        ("auth", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("companyprofile", "0006_auto_20190506_1719"),
        ("auth", "0008_alter_user_username_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=60, verbose_name="tittel")),
                ("event_start", models.DateTimeField(verbose_name="start-dato")),
                ("event_end", models.DateTimeField(verbose_name="slutt-dato")),
                ("location", models.CharField(max_length=100, verbose_name="lokasjon")),
                (
                    "ingress_short",
                    models.CharField(
                        help_text="En kort ingress som blir vist på forsiden",
                        max_length=150,
                        validators=[django.core.validators.MinLengthValidator(25)],
                        verbose_name="kort ingress",
                    ),
                ),
                (
                    "ingress",
                    models.TextField(
                        help_text="En ingress som blir vist før beskrivelsen.",
                        validators=[django.core.validators.MinLengthValidator(25)],
                        verbose_name="ingress",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        validators=[django.core.validators.MinLengthValidator(45)],
                        verbose_name="beskrivelse",
                    ),
                ),
                (
                    "event_type",
                    models.SmallIntegerField(
                        choices=[
                            (1, "Sosialt"),
                            (2, "Bedriftspresentasjon"),
                            (3, "Kurs"),
                            (4, "Utflukt"),
                            (5, "Ekskursjon"),
                            (6, "Internt"),
                            (7, "Annet"),
                            (8, "Realfagskjelleren"),
                        ],
                        verbose_name="type",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_events",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Oppretter",
                    ),
                ),
                (
                    "image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="events",
                        to="gallery.responsiveimage",
                    ),
                ),
                (
                    "organizer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="auth.group",
                        verbose_name="arrangør",
                    ),
                ),
                (
                    "visible",
                    models.BooleanField(
                        default=True,
                        help_text="Denne brukes for å skjule eksisterende arrangementer.",
                        verbose_name="Vis arrangementet utenfor Dashboard og Adminpanelet",
                    ),
                ),
            ],
            options={
                "verbose_name": "arrangement",
                "verbose_name_plural": "arrangementer",
                "permissions": (("view_event", "View Event"),),
                "default_permissions": ("add", "change", "delete"),
            },
        ),
        migrations.CreateModel(
            name="AttendanceEvent",
            fields=[
                (
                    "event",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="attendance_event",
                        serialize=False,
                        to="events.event",
                    ),
                ),
                (
                    "max_capacity",
                    models.PositiveIntegerField(verbose_name="maks-kapasitet"),
                ),
                (
                    "waitlist",
                    models.BooleanField(default=False, verbose_name="venteliste"),
                ),
                (
                    "guest_attendance",
                    models.BooleanField(default=False, verbose_name="gjestepåmelding"),
                ),
                (
                    "registration_start",
                    models.DateTimeField(verbose_name="registrerings-start"),
                ),
                (
                    "unattend_deadline",
                    models.DateTimeField(verbose_name="avmeldings-frist"),
                ),
                (
                    "registration_end",
                    models.DateTimeField(verbose_name="registrerings-slutt"),
                ),
                (
                    "automatically_set_marks",
                    models.BooleanField(
                        default=False,
                        help_text="Påmeldte som ikke har møtt vil automatisk få prikk",
                        verbose_name="automatisk prikk",
                    ),
                ),
                ("marks_has_been_set", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "påmelding",
                "verbose_name_plural": "påmeldinger",
                "permissions": (("view_attendanceevent", "View AttendanceEvent"),),
            },
        ),
        migrations.CreateModel(
            name="Reservation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "seats",
                    models.PositiveIntegerField(verbose_name="reserverte plasser"),
                ),
                (
                    "attendance_event",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reserved_seats",
                        to="events.attendanceevent",
                    ),
                ),
            ],
            options={
                "verbose_name": "reservasjon",
                "verbose_name_plural": "reservasjoner",
                "permissions": (("view_reservation", "View Reservation"),),
                "default_permissions": ("add", "change", "delete"),
            },
        ),
        migrations.CreateModel(
            name="Rule",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "offset",
                    models.PositiveSmallIntegerField(
                        default=0,
                        help_text="utsettelse oppgis i timer",
                        verbose_name="utsettelse",
                    ),
                ),
            ],
            options={
                "permissions": (("view_rule", "View Rule"),),
                "default_permissions": ("add", "change", "delete"),
                "ordering": ("id",),
            },
        ),
        migrations.CreateModel(
            name="GradeRule",
            fields=[
                (
                    "rule_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="events.rule",
                    ),
                ),
                ("grade", models.SmallIntegerField(verbose_name="klassetrinn")),
            ],
            options={
                "permissions": (("view_graderule", "View GradeRule"),),
                "default_permissions": ("add", "change", "delete"),
            },
            bases=("events.rule",),
        ),
        migrations.CreateModel(
            name="FieldOfStudyRule",
            fields=[
                (
                    "rule_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="events.rule",
                    ),
                ),
                (
                    "field_of_study",
                    models.SmallIntegerField(
                        choices=[
                            (0, "Gjest"),
                            (1, "Bachelor i Informatikk"),
                            (10, "Programvaresystemer"),
                            (11, "Databaser og søk"),
                            (12, "Algoritmer og datamaskiner"),
                            (13, "Spillteknologi"),
                            (14, "Kunstig intelligens"),
                            (15, "Helseinformatikk"),
                            (16, "Interaksjonsdesign, spill- og læringsteknologi"),
                            (30, "Annen mastergrad"),
                            (40, "Sosialt medlem"),
                            (80, "PhD"),
                            (90, "International"),
                            (100, "Annet Onlinemedlem"),
                        ],
                        verbose_name="studieretning",
                    ),
                ),
            ],
            options={
                "permissions": (("view_fieldofstudyrule", "View FieldOfStudyRule"),),
                "default_permissions": ("add", "change", "delete"),
            },
            bases=("events.rule",),
        ),
        migrations.CreateModel(
            name="UserGroupRule",
            fields=[
                (
                    "rule_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="events.rule",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="auth.group"
                    ),
                ),
            ],
            options={
                "permissions": (("view_usergrouprule", "View UserGroupRule"),),
                "default_permissions": ("add", "change", "delete"),
            },
            bases=("events.rule",),
        ),
        migrations.CreateModel(
            name="RuleBundle",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="beskrivelse",
                    ),
                ),
                (
                    "field_of_study_rules",
                    models.ManyToManyField(blank=True, to="events.FieldOfStudyRule"),
                ),
                (
                    "grade_rules",
                    models.ManyToManyField(blank=True, to="events.GradeRule"),
                ),
                (
                    "user_group_rules",
                    models.ManyToManyField(blank=True, to="events.UserGroupRule"),
                ),
            ],
            options={
                "permissions": (("view_rulebundle", "View RuleBundle"),),
                "default_permissions": ("add", "change", "delete"),
                "ordering": ("id",),
            },
        ),
        migrations.AddField(
            model_name="attendanceevent",
            name="rule_bundles",
            field=models.ManyToManyField(blank=True, to="events.RuleBundle"),
        ),
        migrations.CreateModel(
            name="Extras",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("choice", models.CharField(max_length=69, verbose_name="valg")),
                (
                    "note",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="notat"
                    ),
                ),
            ],
            options={
                "ordering": ["choice"],
                "verbose_name": "ekstra valg",
                "verbose_name_plural": "ekstra valg",
                "default_permissions": ("add", "change", "delete"),
            },
        ),
        migrations.AddField(
            model_name="attendanceevent",
            name="extras",
            field=models.ManyToManyField(blank=True, to="events.Extras"),
        ),
        migrations.AlterModelOptions(
            name="attendanceevent",
            options={
                "default_permissions": ("add", "change", "delete"),
                "ordering": ("pk",),
                "permissions": (("view_attendanceevent", "View AttendanceEvent"),),
                "verbose_name": "påmelding",
                "verbose_name_plural": "påmeldinger",
            },
        ),
        migrations.CreateModel(
            name="GroupRestriction",
            fields=[
                (
                    "event",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="group_restriction",
                        serialize=False,
                        to="events.event",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Legg til de gruppene som skal ha tilgang til arrangementet",
                        to="auth.Group",
                    ),
                ),
            ],
            options={
                "verbose_name": "restriksjon",
                "verbose_name_plural": "restriksjoner",
                "permissions": (("view_restriction", "View Restriction"),),
                "default_permissions": ("add", "change", "delete"),
            },
        ),
        migrations.CreateModel(
            name="Reservee",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=69, verbose_name="navn")),
                ("note", models.CharField(max_length=100, verbose_name="notat")),
                (
                    "allergies",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="allergier"
                    ),
                ),
                (
                    "reservation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reservees",
                        to="events.reservation",
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
                "verbose_name": "reservasjon",
                "verbose_name_plural": "reservasjoner",
                "permissions": (("view_reservee", "View Reservee"),),
                "default_permissions": ("add", "change", "delete"),
            },
        ),
        migrations.CreateModel(
            name="CompanyEvent",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="companyprofile.company",
                        verbose_name="bedrifter",
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="companies",
                        to="events.event",
                        verbose_name="arrangement",
                    ),
                ),
            ],
            options={
                "verbose_name": "bedrift",
                "verbose_name_plural": "bedrifter",
                "permissions": (("view_companyevent", "View CompanyEvent"),),
                "ordering": ("company",),
                "default_permissions": ("add", "change", "delete"),
                "unique_together": {("company", "event")},
            },
        ),
        migrations.CreateModel(
            name="Attendee",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "attended",
                    models.BooleanField(default=False, verbose_name="var tilstede"),
                ),
                ("paid", models.BooleanField(default=False, verbose_name="har betalt")),
                (
                    "note",
                    models.CharField(
                        blank=True, default="", max_length=100, verbose_name="notat"
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attendees",
                        to="events.attendanceevent",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "extras",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="events.extras",
                    ),
                ),
                (
                    "show_as_attending_event",
                    models.BooleanField(
                        default=False, verbose_name="vis som påmeldt arrangementet"
                    ),
                ),
                (
                    "allow_pictures",
                    models.BooleanField(default=False, verbose_name="greit å ta bilde"),
                ),
            ],
            options={
                "ordering": ["timestamp"],
                "permissions": (("view_attendee", "View Attendee"),),
                "unique_together": {("event", "user")},
                "default_permissions": ("add", "change", "delete"),
            },
        ),
        migrations.AddField(
            model_name="event",
            name="companies",
            field=models.ManyToManyField(
                related_name="events",
                through="events.CompanyEvent",
                to="companyprofile.Company",
                verbose_name="Bedrifter",
            ),
        ),
        migrations.AlterField(
            model_name="companyevent",
            name="event",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="company_events",
                to="events.event",
                verbose_name="arrangement",
            ),
        ),
    ]
