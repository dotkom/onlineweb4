# Generated by Django 3.2.12 on 2022-04-03 18:36

import django.db.models.deletion
import taggit.managers
from django.conf import settings
from django.db import migrations, models

import apps.article.models


class Migration(migrations.Migration):
    replaces = [
        ("article", "0001_initial"),
        ("article", "0002_auto_20150218_2217"),
        ("article", "0003_auto_20151018_0311"),
        ("article", "0004_article_image"),
        ("article", "0005_auto_20151018_1008"),
        ("article", "0006_auto_20151024_2111"),
        ("article", "0007_auto_20151029_2233"),
        ("article", "0008_auto_20151029_2238"),
        ("article", "0009_article_tags"),
        ("article", "0010_auto_20151101_0522"),
        ("article", "0011_auto_20190506_1719"),
        ("article", "0012_auto_20191007_2357"),
        ("article", "0013_auto_20200229_1046"),
    ]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("taggit", "0002_auto_20150616_2121"),
        ("gallery", "0005_responsiveimage_image_wide"),
    ]

    operations = [
        migrations.CreateModel(
            name="Article",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("heading", models.CharField(max_length=45, verbose_name="tittel")),
                (
                    "ingress_short",
                    models.CharField(max_length=100, verbose_name="kort ingress"),
                ),
                ("ingress", models.TextField(verbose_name="ingress")),
                ("content", models.TextField(verbose_name="content")),
                (
                    "video",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        validators=[apps.article.models.vimeo_id_validator],
                        verbose_name="vimeo id",
                    ),
                ),
                (
                    "created_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="opprettet-dato"
                    ),
                ),
                (
                    "changed_date",
                    models.DateTimeField(auto_now=True, verbose_name="sist endret"),
                ),
                ("published_date", models.DateTimeField(verbose_name="publisert")),
                (
                    "authors",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="forfatter(e)"
                    ),
                ),
                (
                    "featured",
                    models.BooleanField(
                        default=False, verbose_name="featured artikkel"
                    ),
                ),
                (
                    "changed_by",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="changed_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="endret av",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_articles",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="opprettet av",
                    ),
                ),
                (
                    "image",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="gallery.responsiveimage",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        blank=True,
                        help_text="A comma-separated list of tags.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
            ],
            options={
                "ordering": ["published_date"],
                "verbose_name": "artikkel",
                "verbose_name_plural": "artikler",
                "permissions": (("view_article", "View Article"),),
                "default_permissions": ("add", "change", "delete"),
            },
        ),
    ]
